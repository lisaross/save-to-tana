class n{apiKeyInput;targetNodeIdInput;supertagIdInput;saveButton;tanaSchemaInput;extractSchemaButton;extractedFieldsDiv;extractedFieldIdsPre;fieldIdUrlInput;fieldIdAuthorInput;fieldIdDescriptionInput;fieldIdContentInput;schemaErrorDiv;toast=null;constructor(){this.apiKeyInput=document.getElementById("apiKey"),this.targetNodeIdInput=document.getElementById("targetNodeId"),this.supertagIdInput=document.getElementById("supertagId"),this.saveButton=document.getElementById("saveButton"),this.tanaSchemaInput=document.getElementById("tanaSchema"),this.extractSchemaButton=document.getElementById("extractSchemaButton"),this.extractedFieldsDiv=document.getElementById("extractedFields"),this.extractedFieldIdsPre=document.getElementById("extractedFieldIds"),this.fieldIdUrlInput=document.getElementById("fieldIdUrl"),this.fieldIdAuthorInput=document.getElementById("fieldIdAuthor"),this.fieldIdDescriptionInput=document.getElementById("fieldIdDescription"),this.fieldIdContentInput=document.getElementById("fieldIdContent"),this.toast=document.getElementById("toast"),this.schemaErrorDiv=document.createElement("div"),this.schemaErrorDiv.className="status error",this.schemaErrorDiv.style.display="none",this.tanaSchemaInput.parentNode?.insertBefore(this.schemaErrorDiv,this.tanaSchemaInput.nextSibling),this.initializePage()}initializePage(){this.loadConfiguration(),this.saveButton.addEventListener("click",this.saveConfiguration.bind(this)),this.extractSchemaButton.addEventListener("click",this.extractSchemaFromTextarea.bind(this)),this.apiKeyInput.addEventListener("input",this.validateForm.bind(this)),this.targetNodeIdInput.addEventListener("input",this.validateForm.bind(this)),this.supertagIdInput.addEventListener("input",this.validateForm.bind(this)),this.fieldIdUrlInput.addEventListener("input",this.validateForm.bind(this)),this.fieldIdAuthorInput.addEventListener("input",this.validateForm.bind(this)),this.fieldIdDescriptionInput.addEventListener("input",this.validateForm.bind(this)),this.fieldIdContentInput.addEventListener("input",this.validateForm.bind(this)),this.initializeExampleJsonToggle()}initializeExampleJsonToggle(){const e=document.getElementById("toggleExampleJson"),a=document.getElementById("exampleJsonBlock"),t=document.getElementById("toggleExampleJsonLabel");e&&a&&t&&e.addEventListener("click",()=>{const i=e.getAttribute("aria-expanded")==="true";e.setAttribute("aria-expanded",String(!i)),a.style.display=i?"none":"block",t.textContent=i?"Show Example JSON":"Hide Example JSON"})}loadConfiguration(){chrome.storage.sync.get(["apiKey","supertagId","targetNodeId","tanaFieldIds"],e=>{console.log("Loaded configuration:",e),e.apiKey&&(this.apiKeyInput.value=e.apiKey),e.targetNodeId&&(this.targetNodeIdInput.value=e.targetNodeId),e.supertagId&&(this.supertagIdInput.value=e.supertagId),e.tanaFieldIds&&(this.fieldIdUrlInput.value=e.tanaFieldIds.URL||"",this.fieldIdAuthorInput.value=e.tanaFieldIds.Author||"",this.fieldIdDescriptionInput.value=e.tanaFieldIds.Description||"",this.fieldIdContentInput.value=e.tanaFieldIds.Content||""),this.validateForm()})}saveConfiguration(){const e=this.apiKeyInput.value.trim(),a=this.targetNodeIdInput.value.trim(),t=this.supertagIdInput.value.trim(),i={URL:this.fieldIdUrlInput.value.trim(),Author:this.fieldIdAuthorInput.value.trim(),Description:this.fieldIdDescriptionInput.value.trim(),Content:this.fieldIdContentInput.value.trim()};if(!e){this.showToast("API Token is required",!0);return}if(!a){this.showToast("Target Node ID is required",!0);return}if(!t){this.showToast("Save to Tana Supertag ID is required. Please extract schema.",!0);return}if(!i.URL||!i.Author||!i.Description||!i.Content){this.showToast("All field IDs are required.",!0);return}chrome.storage.sync.set({apiKey:e,targetNodeId:a,supertagId:t,tanaFieldIds:i},()=>{this.showToast("Configuration saved successfully!")})}validateForm(){const e=this.apiKeyInput.value.trim(),a=this.targetNodeIdInput.value.trim(),t=this.supertagIdInput.value.trim();this.saveButton.disabled=!e||!a||!t}showToast(e,a=!1){this.toast&&(this.toast.textContent=e,this.toast.className=`toast${a?" error":" success"} show`,setTimeout(()=>{this.toast&&(this.toast.className=`toast${a?" error":" success"}`,this.toast.textContent="")},5e3))}extractSchemaFromTextarea(){this.schemaErrorDiv.style.display="none",this.schemaErrorDiv.textContent="";const e=this.tanaSchemaInput.value;let a;try{a=JSON.parse(e)}catch(t){const i=t;this.schemaErrorDiv.textContent="Could not parse JSON. Please paste the API payload as copied from Tana. Error: "+i.message,this.schemaErrorDiv.style.display="block",this.extractedFieldsDiv.style.display="none";return}try{const t=this.extractSchemaInfo(a);this.supertagIdInput.value=t.supertagId,this.fieldIdUrlInput.value=t.fieldIds.URL||"",this.fieldIdAuthorInput.value=t.fieldIds.Author||"",this.fieldIdDescriptionInput.value=t.fieldIds.Description||"",this.fieldIdContentInput.value=t.fieldIds.Content||"",this.extractedFieldsDiv.style.display="block",this.extractedFieldIdsPre.innerHTML="Supertag ID: "+t.supertagId+`
`+Object.entries(t.fieldIds).map(([i,s])=>`${i} ID: ${s}`).join(`
`),chrome.storage.sync.get(["apiKey","targetNodeId"],i=>{chrome.storage.sync.set({apiKey:i.apiKey||"",targetNodeId:i.targetNodeId||"",supertagId:t.supertagId,tanaFieldIds:t.fieldIds},()=>{this.showToast("Schema extracted and saved!")})})}catch(t){const i=t;this.schemaErrorDiv.textContent=`Failed to extract schema info: ${i.message}`,this.schemaErrorDiv.style.display="block",this.extractedFieldsDiv.style.display="none"}}extractSchemaInfo(e){const a=Array.isArray(e.nodes)?e.nodes[0]:null;if(!a)throw new Error("No nodes found in schema payload.");const t=a.supertags?.[0]?.id||"";if(!t)throw new Error("No supertag ID found in schema.");const i={};if(Array.isArray(a.children))for(const s of a.children)s.type==="field"&&s.attributeId&&(s.children?.[0]?.dataType==="url"?i.URL=s.attributeId:i.Author===void 0?i.Author=s.attributeId:i.Description===void 0?i.Description=s.attributeId:i.Content=s.attributeId);return{supertagId:t,fieldIds:i}}static cleanSchemaString(e){const a=e.split(`
`);a[0].trim().startsWith("type")&&a.shift(),a[a.length-1].trim().replace(/[;\s]/g,"")==="}"&&a.pop();let t=a.map(i=>i.replace(/\/\*[\s\S]*?\*\//g,"").replace(/\/\/.*$/g,"").replace(/^\s*\w+\??:.*;\s*$/g,"").replace(/;/g,"").replace(/\?/g,"").replace(/'/g,'"').trim()).filter(i=>i.length>0).join(`
`);return t=t.replace(/,\s*([\]}])/g,"$1"),t=t.replace(/(^|[,{\s])(\w+):/g,'$1"$2":'),t.trim().startsWith("{")||(t=`{${t}}`),t}}document.addEventListener("DOMContentLoaded",()=>{new n});
//# sourceMappingURL=options.js.map
