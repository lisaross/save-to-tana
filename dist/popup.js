class i{saveButton;statusDiv;openOptionsLink;includeContentCheckbox;includeTitleCheckbox;notConfiguredDiv;progressContainer;progressFill;progressText;progressInterval=null;constructor(){this.saveButton=document.getElementById("save-button"),this.statusDiv=document.getElementById("status"),this.openOptionsLink=document.getElementById("open-options"),this.includeContentCheckbox=document.getElementById("include-content"),this.includeTitleCheckbox=document.getElementById("include-title"),this.notConfiguredDiv=document.getElementById("not-configured"),this.progressContainer=document.getElementById("progress-container"),this.progressFill=document.getElementById("progress-fill"),this.progressText=document.getElementById("progress-text"),this.initializePopup()}initializePopup(){this.checkConfiguration(),this.openOptionsLink.addEventListener("click",this.openOptions.bind(this)),this.saveButton.addEventListener("click",this.saveToTana.bind(this))}checkConfiguration(){chrome.storage.sync.get(["apiKey","supertagId","targetNodeId"],e=>{(!e.apiKey||!e.supertagId||!e.targetNodeId)&&(this.saveButton.disabled=!0,this.notConfiguredDiv.style.display="block")})}openOptions(){chrome.runtime.openOptionsPage()}saveToTana(){this.saveButton.disabled=!0,this.saveButton.textContent="Saving...",this.updateStatus({message:"",isError:!1}),this.showProgress("Extracting content...");const e={includeContent:this.includeContentCheckbox.checked,includeTitle:this.includeTitleCheckbox.checked};chrome.tabs.query({active:!0,currentWindow:!0},s=>{const t=s[0];if(!t.id){this.handleError("Cannot access the current tab.");return}this.extractContentFromPage(t.id,e)})}extractContentFromPage(e,s){chrome.tabs.sendMessage(e,{action:"extractContent",options:s},t=>{if(chrome.runtime.lastError){this.handleError("Error communicating with the page: "+chrome.runtime.lastError.message);return}if(!t){this.handleError("No response from the page. Please refresh and try again.");return}if(t.error){this.handleError(t.message||"Error extracting content from the page");return}this.updateProgress(25,"Content extracted, sending to Tana..."),this.sendToBackground(t)})}sendToBackground(e){const s={action:"saveToTana",data:e},r=JSON.stringify(e).length>4500;if(r){this.updateProgress(30,"Preparing large content for upload...");let n=30;this.progressInterval=window.setInterval(()=>{n<85&&(n+=5,this.updateProgress(n,"Uploading content chunks..."))},800),chrome.runtime.sendMessage(s,o=>{this.clearProgressInterval(),this.handleBackgroundResponse(o,r)})}else this.updateProgress(50,"Uploading to Tana..."),chrome.runtime.sendMessage(s,n=>{this.handleBackgroundResponse(n,r)})}handleBackgroundResponse(e,s){if(this.saveButton.disabled=!1,this.saveButton.textContent="Save to Tana",!e){this.handleError("No response from the extension. Please try again.");return}if(!e.success){this.handleError(e.error||"Unknown error occurred");return}this.updateProgress(100,"Complete!");let t="Saved to Tana successfully!";e.data&&e.data.contentChunks>0&&(t=`Saved to Tana successfully! (Content split into ${e.data.contentChunks} parts due to size)`),setTimeout(()=>{this.hideProgress(),this.showSuccess(t)},500)}handleError(e){this.saveButton.disabled=!1,this.saveButton.textContent="Save to Tana",this.hideProgress(),this.updateStatus({message:e,isError:!0})}showSuccess(e){this.updateStatus({message:e,isError:!1}),setTimeout(()=>{this.updateStatus({message:"",isError:!1})},3e3)}updateStatus(e){this.statusDiv.textContent=e.message,this.statusDiv.className="status"+(e.isError?" error":e.message?" success":"")}showProgress(e="Processing..."){this.progressContainer.style.display="block",this.progressText.textContent=e,this.progressFill.style.width="0%",this.updateStatus({message:"",isError:!1})}updateProgress(e,s){this.progressFill.style.width=`${Math.min(100,Math.max(0,e))}%`,this.progressText.textContent=s}hideProgress(){this.clearProgressInterval(),this.progressContainer.style.display="none"}clearProgressInterval(){this.progressInterval!==null&&(window.clearInterval(this.progressInterval),this.progressInterval=null)}}document.addEventListener("DOMContentLoaded",()=>{new i});
//# sourceMappingURL=popup.js.map
